

https://github.com/tarimura/rep01ta.git


git clone https://github.com/tarimura/rep01ta.git sample





ブランチを削除するには、branchコマンドに -d オプションを指定して実行します。
$ git branch -d <branchname>



ブランチは branch コマンドで作成することができます。
$ git branch <branchname>

checkoutコマンドに -b オプションを指定して実行すると、
ブランチの作成とチェックアウトをまとめて行うことができます。
$ git checkout -b <branch>









リポジトリをクローンするには git clone [url] とします
[remote "origin"]
	url = https://github.com/tarimura/git.git

git clone git://github.com/tarimura/git.git

$ git clone ＜複製したいリポジトリのURL＞ ＜作成するディレクトリ＞
git clone git://github.com/tarimura/rep01ta.git git101


E:\git99 [master]> git remote -v
origin  git://github.com/tarimura/rep01ta.git (fetch)
origin  git://github.com/tarimura/rep01ta.git (push)

E:\git10\rep02ta [master]> git remote -v
origin  https://github.com/tarimura/rep02ta.git (fetch)
origin  https://github.com/tarimura/rep01ta.git (push)

git remote add upstream https://github.com/tarimura/rep01ta.git





commit内容が間違っていた。取り消して再度commitしたい
直前のcommitだけであれば、git commit --amendを使えば解決出来ます。
    ファイルに修正を加えて、commit
    間違っていた事に気づいたので、更に修正を加えた
    git addしてgit commit --amend

これでOKです。









履歴を管理するリポジトリ

リポジトリとは、ファイルやディレクトリの状態を記録する場所です。
保存された状態は、内容の変更履歴として格納されています。
変更履歴を管理したいディレクトリをリポジトリの管理下に置くことで、
そのディレクトリ内のファイルやディレクトリの変更履歴を記録することができます。


リポジトリの作成
自分の手元にローカルリポジトリを作成する方法は二種類あります。

一つ目は全く新しいリポジトリを作成する方法、
二つ目はリモートリポジトリをコピーして作成する方法です。



Push
リモートリポジトリで自分の手元のローカルリポジトリの変更履歴を共有するには、
ローカルリポジトリ内の変更履歴をアップロードする必要があります。

そのために、Gitではプッシュ(Push)という操作を行います。 
Pushを実行すると、リモートリポジトリに自分の変更履歴がアップロードされて、
リモートリポジトリ内の変更履歴がローカルリポジトリの変更履歴と同じ状態になります。


Clone
リモートリポジトリを複製するには、クローン(Clone)という操作を行います。
クローンを実行すると、リモートリポジトリの内容をまるまるダウンロードしてきて、
別のマシンにローカルリポジトリとして作成できます。
クローンしたローカルリポジトリは変更履歴も複製されているので、
元々のリポジトリと全く同じように履歴の参照やコミットをすることができます。


Pull
リモートリポジトリからローカルリポジトリを更新するにはプル(Pull)という操作を行います。

Pullを実行すると、リモートリポジトリから最新の変更履歴をダウンロードしてきて、
自分のローカルリポジトリにその内容を取り込みます。


リモートの表示
今までにどのリモートサーバーを設定したのかを知るには git remote コマンドを実行します。
これは、今までに設定したリモートハンドルの名前を一覧表示します。
リポジトリをクローンしたのなら、少なくとも origin という名前が見えるはずです。
これは、クローン元のサーバーに対して Git がデフォルトでつける名前です。

-v を指定すると、その名前に対応する URL を表示します。
E:\git44 [master +1 ~0 -0 !]> git remote -v
remgit  https://github.com/tarimura/git.git (fetch)
remgit  https://github.com/tarimura/git.git (push)

C:\Users\user\Documents\GitHub\git [master]> git remote -v
origin  https://github.com/tarimura/git.git (fetch)
origin  https://github.com/tarimura/git.git (push)



testgit2を作成してリモートリポジトリを取り込む
git clone https://github.com/tarimura/git.git testgit2



リモートリポジトリの追加
これまでのセクションでも何度かリモートリポジトリの追加を行ってきましたが、
ここで改めてその方法をきちんと説明しておきます。
新しいリモート Git リポジトリにアクセスしやすいような名前をつけて追加するには、
git remote add [shortname] [url] を実行します。

$ git remote
origin
$ git remote add pb git://github.com/paulboone/ticgit.git
$ git remote -v
origin  git://github.com/schacon/ticgit.git
pb  git://github.com/paulboone/ticgit.git

リモートリポジトリの追加
git remote add [shortname] [url] を実行します。

git remote add pb https://github.com/tarimura/git50.git

E:\git44 [master]> git remote add pb https://github.com/tarimura/git44.git
E:\git44 [master]> git remote -v
pb      https://github.com/tarimura/git44.git (fetch)
pb      https://github.com/tarimura/git44.git (push)
remgit  https://github.com/tarimura/git.git (fetch)
remgit  https://github.com/tarimura/git.git (push)


リモートgit44をを取り込む
git clone https://github.com/tarimura/git.git testgit44
git clone https://github.com/tarimura/git.git


ファイルを削除を反映する
ファイルを削除する
git rm grep4.txt
git commit
git push


git fetch https://github.com/tarimura/git.git
git pull https://github.com/tarimura/git.git



リモートリポジトリのブランチを削除したい
git push --delete <repository> <branchname>

git push --delete https://github.com/tarimura/git.git newvranch








